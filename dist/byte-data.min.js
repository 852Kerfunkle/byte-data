function endianness(t,e,r=0,n=t.length){if(n%e)throw Error("Bad buffer length.");for(let a=r;a<n;a+=e)swap(t,e,a)}function swap(t,e,r){e--;for(let n=0;n<e;n++){let a=t[r+n];t[r+n]=t[r+e],t[r+e]=a,e--}}function utf8BufferSize(t){let e=0;for(let r=0,n=t.length;r<n;r++){let n=t.codePointAt(r);n<128?e++:(n<=2047?e++:n<=65535?e+=2:n<=1114111&&(r++,e+=3),e++)}return e}function unpack(t,e=0,r=null){r=null!==r?r+1:t.length;let n="";for(let a=e;a<r;){let e=128,r=191,o=!1,s=t[a++];if(s>=0&&s<=127)n+=String.fromCharCode(s);else{let i=0;s>=194&&s<=223?i=1:s>=224&&s<=239?(i=2,224===t[a]&&(e=160),237===t[a]&&(r=159)):s>=240&&s<=244?(i=3,240===t[a]&&(e=144),244===t[a]&&(r=143)):o=!0,s&=(1<<8-i-1)-1;for(let n=0;n<i;n++)(t[a]<e||t[a]>r)&&(o=!0),s=s<<6|63&t[a],a++;n+=o?"ï¿½":s<=65535?String.fromCharCode(s):String.fromCharCode(55296+((s-=65536)>>10&1023),56320+(1023&s))}}return n}function pack(t,e,r=0){for(let n=0,a=t.length;n<a;n++){let a=t.codePointAt(n);if(a<128)e[r]=a,r++;else{let t=0,o=0;for(a<=2047?(t=1,o=192):a<=65535?(t=2,o=224):a<=1114111&&(t=3,o=240,n++),e[r]=(a>>6*t)+o,r++;t>0;)e[r]=128|a>>6*(t-1)&63,r++,t--}}return r}class UintBuffer{constructor(t){this.bits=t,this.bytes=t<8?1:Math.ceil(t/8),this.max=Math.pow(2,t)-1,this.min=0;let e=8-(1+(t-1|7)-t);this.lastByteMask_=Math.pow(2,e>0?e:8)-1}pack(t,e,r=0){if(e!=e)throw Error("NaN");this.overflow(e),t[r]=255&(e<0?e+Math.pow(2,this.bits):e),r++;let n=this.bytes;for(let a=2;a<n;a++)t[r]=255&Math.floor(e/Math.pow(2,8*(a-1))),r++;return this.bits>8&&(t[r]=Math.floor(e/Math.pow(2,8*(this.bytes-1)))&this.lastByteMask_,r++),r}unpack(t,e=0){let r=this.unpackUnsafe(t,e);return this.overflow(r),r}unpackUnsafe(t,e){let r=0;for(let n=0;n<this.bytes;n++)r+=t[e+n]*Math.pow(256,n);return r}overflow(t){if(t>this.max||t<this.min)throw Error("Overflow")}}class TwosComplementBuffer extends UintBuffer{constructor(t){super(t),this.max=Math.pow(2,this.bits)/2-1,this.min=-this.max-1}pack(t,e,r=0){return super.pack(t,e,r)}unpack(t,e=0){let r=super.unpackUnsafe(t,e);return r=this.sign_(r),this.overflow(r),r}sign_(t){return t>this.max&&(t-=2*this.max+2),t}}class IntBuffer{constructor(t,e){this.parser=e?new TwosComplementBuffer(t):new UintBuffer(t)}pack(t,e,r=0){return this.parser.pack(t,e,r)}unpack(t,e=0){return this.parser.unpack(t,e)}}const typeDefinition="Unsupported type";function validateValueType(t){if(void 0===t)throw Error("Undefined value");if(null!==t&&t.constructor!=Number&&t.constructor!=Boolean)throw Error("Can't pack "+t.constructor)}function validateType(t){if(!t)throw Error(typeDefinition);t.float?validateFloatType_(t):validateIntType_(t)}function validateFloatType_(t){if(16!=t.bits&&32!=t.bits&&64!=t.bits)throw Error(typeDefinition)}function validateIntType_(t){if(t.bits<1||t.bits>53)throw Error(typeDefinition)}function pack$1(t,e,r,n,a){let o=(1<<n-1)-1;Math.abs(r)>Math.pow(2,o+1)-2*(n+a)&&(r=r<0?-1/0:1/0);let s=((r=+r)||1/r)<0?1:r<0?1:0,i=Math.min(Math.floor(Math.log(r=Math.abs(r))/Math.LN2),1023),f=roundToEven(r/Math.pow(2,i)*Math.pow(2,a));return r!=r?(f=Math.pow(2,a-1),i=(1<<n)-1):0!==r&&(r>=Math.pow(2,1-o)?(f/Math.pow(2,a)>=2&&(i+=1,f=1),i>o?(i=(1<<n)-1,f=0):(i+=o,f=roundToEven(f)-Math.pow(2,a))):(f=roundToEven(r/Math.pow(2,1-o-a)),i=0)),packFloatBits_(t,e,n,a,s,i,f)}function unpack$1(t,e,r,n){let a,o=(1<<r-1)-1,s=Math.ceil((r+n)/8),i=(1<<r)-1,f=Math.pow(2,-(8*s-1-r)),u="";for(let r=s-1;r>=0;r--){let n=t[r+e].toString(2);u+="00000000".substring(n.length)+n}let p="1"==u.charAt(0)?-1:1;u=u.substring(1);let c=parseInt(u.substring(0,r),2);return u=u.substring(r),c==i?0!==parseInt(u,2)?NaN:p*(1/0):(0===c?(c+=1,a=parseInt(u,2)):a=parseInt("1"+u,2),p*a*f*Math.pow(2,c-o))}function packFloatBits_(t,e,r,n,a,o,s){let i=[];i.push(a);for(let t=r;t>0;t-=1)i[t]=o%2?1:0,o=Math.floor(o/2);let f=i.length;for(let t=n;t>0;t-=1)i[f+t]=s%2?1:0,s=Math.floor(s/2);let u=i.join(""),p=Math.floor((r+n+1)/8)+e-1,c=e;for(;p>=e;)t[p]=parseInt(u.substring(0,8),2),u=u.substring(8),p--,c++;return c}function roundToEven(t){var e=Math.floor(t),r=t-e;return r<.5?e:r>.5?e+1:e%2?e+1:e}class NumberBuffer extends IntBuffer{constructor(t){validateType(t),t.signed=!t.float&&t.signed,super(t.bits,t.signed),this.offset=this.parser.bytes,this.parser.bytes=64===this.parser.bits?4:this.parser.bytes,this.setReaderAndWriter_(t)}read16F_(t,e=0){return unpack$1(t,e,5,11)}read32F_(t,e=0){return unpack$1(t,e,8,23)}read64F_(t,e=0){return unpack$1(t,e,11,52)}write16F_(t,e,r=0){return pack$1(t,r,e,5,11)}write32F_(t,e,r=0){return pack$1(t,r,e,8,23)}write64F_(t,e,r=0){return pack$1(t,r,e,11,52)}setReaderAndWriter_(t){t.float?16==t.bits?(this.unpack=this.read16F_,this.pack=this.write16F_):32==t.bits?(this.unpack=this.read32F_,this.pack=this.write32F_):(this.unpack=this.read64F_,this.pack=this.write64F_):(this.unpack=super.unpack,this.pack=super.pack)}}const SIZE_ERR="Bad buffer length";function unpackString(t,e=0,r=null){return unpack(t,e,r)}function packString(t){let e=new Uint8Array(utf8BufferSize(t));return pack(t,e,0),e}function packStringTo(t,e,r=0){return pack(t,e,r)}function pack$2(t,e){let r=[];return packTo(t,e,r),r}function packTo(t,e,r,n=0){return packArrayTo([t],e,r,n)}function packArray(t,e){let r=[];return packArrayTo(t,e,r),r}function packArrayTo(t,e,r,n=0){let a=new NumberBuffer(e),o=t.length;for(let s=0;s<o;s++){validateValueType(t[s]);let o=n+a.offset;for(;n<o;)n=a.pack(r,t[s],n);e.be&&endianness(r,a.offset,n-a.offset,n)}return n}function unpack$2(t,e,r=0){let n=new NumberBuffer(e);if(n.offset+r>t.length)throw Error(SIZE_ERR);e.be&&endianness(t,n.offset,r,r+n.offset);let a=n.unpack(t,r);return e.be&&endianness(t,n.offset,r,r+n.offset),a}function unpackArray(t,e,r=0,n=t.length,a=!1){let o=[];return unpackArrayTo(t,e,o,r,n,a),o}function unpackArrayTo(t,e,r,n=0,a=t.length,o=!1){let s=new NumberBuffer(e),i=n;if(o){if((a-n)%s.offset)throw Error(SIZE_ERR)}else for(;(a-n)%s.offset;)a--;e.be&&endianness(t,s.offset,n,a);for(let e=0;n<a;n+=s.offset)r[e]=s.unpack(t,n),e++;e.be&&endianness(t,s.offset,i,a)}export{unpackString,packString,packStringTo,pack$2 as pack,packTo,packArray,packArrayTo,unpack$2 as unpack,unpackArray,unpackArrayTo};
